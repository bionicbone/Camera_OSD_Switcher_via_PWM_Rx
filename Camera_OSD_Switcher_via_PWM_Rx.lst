;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19/11/2017 09:38:09
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x29F0      	GOTO       496
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A1      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A2      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;Camera_OSD_Switcher_via_PWM_Rx.mbas,154 :: 		Sub Procedure interrupt()
;Camera_OSD_Switcher_via_PWM_Rx.mbas,155 :: 		If INTCON.GPIF = 1 Then
0x000B	0x1C0B      	BTFSS      INTCON, 0
0x000C	0x28A7      	GOTO       L__interrupt74
;Camera_OSD_Switcher_via_PWM_Rx.mbas,157 :: 		RC_Pulse = 0
0x000D	0x01A5      	CLRF       _RC_Pulse
0x000E	0x01A6      	CLRF       _RC_Pulse+1
;Camera_OSD_Switcher_via_PWM_Rx.mbas,158 :: 		While TestBit(GPIO,3)  = 1
L__interrupt77:
0x000F	0x01F1      	CLRF       R1
0x0010	0x1D85      	BTFSS      GPIO, 3
0x0011	0x2814      	GOTO       L__interrupt81
0x0012	0x3001      	MOVLW      1
0x0013	0x00F1      	MOVWF      R1
L__interrupt81:
0x0014	0x0871      	MOVF       R1, 0
0x0015	0x3A01      	XORLW      1
0x0016	0x1D03      	BTFSS      STATUS, 2
0x0017	0x281C      	GOTO       L__interrupt78
;Camera_OSD_Switcher_via_PWM_Rx.mbas,159 :: 		RC_Pulse = RC_Pulse + 1
0x0018	0x0AA5      	INCF       _RC_Pulse, 1
0x0019	0x1903      	BTFSC      STATUS, 2
0x001A	0x0AA6      	INCF       _RC_Pulse+1, 1
;Camera_OSD_Switcher_via_PWM_Rx.mbas,160 :: 		Wend
0x001B	0x280F      	GOTO       L__interrupt77
L__interrupt78:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,166 :: 		RC_Pulse = RC_Pulse * 14.2858
0x001C	0x0825      	MOVF       _RC_Pulse, 0
0x001D	0x00F0      	MOVWF      R0
0x001E	0x0826      	MOVF       _RC_Pulse+1, 0
0x001F	0x00F1      	MOVWF      R0+1
0x0020	0x21CB      	CALL       _Int2Double
0x0021	0x30A3      	MOVLW      163
0x0022	0x00F4      	MOVWF      R4
0x0023	0x3092      	MOVLW      146
0x0024	0x00F5      	MOVWF      R4+1
0x0025	0x3064      	MOVLW      100
0x0026	0x00F6      	MOVWF      R4+2
0x0027	0x3082      	MOVLW      130
0x0028	0x00F7      	MOVWF      R4+3
0x0029	0x216A      	CALL       _Mul_32x32_FP
0x002A	0x210D      	CALL       _Double2Int
0x002B	0x0870      	MOVF       R0, 0
0x002C	0x00A5      	MOVWF      _RC_Pulse
0x002D	0x0871      	MOVF       R0+1, 0
0x002E	0x00A6      	MOVWF      _RC_Pulse+1
;Camera_OSD_Switcher_via_PWM_Rx.mbas,179 :: 		If RC_Pulse <=1500 then
0x002F	0x3080      	MOVLW      128
0x0030	0x3A05      	XORLW      5
0x0031	0x00F2      	MOVWF      R2
0x0032	0x3080      	MOVLW      128
0x0033	0x0671      	XORWF      R0+1, 0
0x0034	0x0272      	SUBWF      R2, 0
0x0035	0x1D03      	BTFSS      STATUS, 2
0x0036	0x2839      	GOTO       L__interrupt190
0x0037	0x0870      	MOVF       R0, 0
0x0038	0x3CDC      	SUBLW      220
L__interrupt190:
0x0039	0x1C03      	BTFSS      STATUS, 0
0x003A	0x283E      	GOTO       L__interrupt83
;Camera_OSD_Switcher_via_PWM_Rx.mbas,182 :: 		GPIO.B2 = 0
0x003B	0x1105      	BCF        GPIO, 2
;Camera_OSD_Switcher_via_PWM_Rx.mbas,183 :: 		GPIO.B1 = 1
0x003C	0x1485      	BSF        GPIO, 1
0x003D	0x2840      	GOTO       L__interrupt84
;Camera_OSD_Switcher_via_PWM_Rx.mbas,184 :: 		Else
L__interrupt83:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,187 :: 		GPIO.B1 = 0
0x003E	0x1085      	BCF        GPIO, 1
;Camera_OSD_Switcher_via_PWM_Rx.mbas,188 :: 		GPIO.B2 = 1
0x003F	0x1505      	BSF        GPIO, 2
;Camera_OSD_Switcher_via_PWM_Rx.mbas,189 :: 		End If
L__interrupt84:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,191 :: 		If RC_Pulse >= 1250 then
0x0040	0x3080      	MOVLW      128
0x0041	0x0626      	XORWF      _RC_Pulse+1, 0
0x0042	0x00F0      	MOVWF      R0
0x0043	0x3080      	MOVLW      128
0x0044	0x3A04      	XORLW      4
0x0045	0x0270      	SUBWF      R0, 0
0x0046	0x1D03      	BTFSS      STATUS, 2
0x0047	0x284A      	GOTO       L__interrupt191
0x0048	0x30E2      	MOVLW      226
0x0049	0x0225      	SUBWF      _RC_Pulse, 0
L__interrupt191:
0x004A	0x1C03      	BTFSS      STATUS, 0
0x004B	0x285E      	GOTO       L__interrupt86
;Camera_OSD_Switcher_via_PWM_Rx.mbas,192 :: 		If RC_Pulse <= 1750 then
0x004C	0x3080      	MOVLW      128
0x004D	0x3A06      	XORLW      6
0x004E	0x00F0      	MOVWF      R0
0x004F	0x3080      	MOVLW      128
0x0050	0x0626      	XORWF      _RC_Pulse+1, 0
0x0051	0x0270      	SUBWF      R0, 0
0x0052	0x1D03      	BTFSS      STATUS, 2
0x0053	0x2856      	GOTO       L__interrupt192
0x0054	0x0825      	MOVF       _RC_Pulse, 0
0x0055	0x3CD6      	SUBLW      214
L__interrupt192:
0x0056	0x1C03      	BTFSS      STATUS, 0
0x0057	0x285B      	GOTO       L__interrupt89
;Camera_OSD_Switcher_via_PWM_Rx.mbas,195 :: 		GPIO.B5 = 0
0x0058	0x1285      	BCF        GPIO, 5
;Camera_OSD_Switcher_via_PWM_Rx.mbas,196 :: 		GPIO.B4 = 1
0x0059	0x1605      	BSF        GPIO, 4
0x005A	0x285D      	GOTO       L__interrupt90
;Camera_OSD_Switcher_via_PWM_Rx.mbas,197 :: 		Else
L__interrupt89:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,200 :: 		GPIO.B4 = 0
0x005B	0x1205      	BCF        GPIO, 4
;Camera_OSD_Switcher_via_PWM_Rx.mbas,201 :: 		GPIO.B5 = 1
0x005C	0x1685      	BSF        GPIO, 5
;Camera_OSD_Switcher_via_PWM_Rx.mbas,202 :: 		End If
L__interrupt90:
0x005D	0x2860      	GOTO       L__interrupt87
;Camera_OSD_Switcher_via_PWM_Rx.mbas,203 :: 		Else
L__interrupt86:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,206 :: 		GPIO.B4 = 0
0x005E	0x1205      	BCF        GPIO, 4
;Camera_OSD_Switcher_via_PWM_Rx.mbas,207 :: 		GPIO.B5 = 1
0x005F	0x1685      	BSF        GPIO, 5
;Camera_OSD_Switcher_via_PWM_Rx.mbas,208 :: 		End If
L__interrupt87:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,220 :: 		counter = 0
0x0060	0x01A3      	CLRF       _counter
0x0061	0x01A4      	CLRF       _counter+1
;Camera_OSD_Switcher_via_PWM_Rx.mbas,221 :: 		While TestBit(GPIO,3)  = 0
L__interrupt92:
0x0062	0x01F1      	CLRF       R1
0x0063	0x1D85      	BTFSS      GPIO, 3
0x0064	0x2867      	GOTO       L__interrupt96
0x0065	0x3001      	MOVLW      1
0x0066	0x00F1      	MOVWF      R1
L__interrupt96:
0x0067	0x0871      	MOVF       R1, 0
0x0068	0x3A00      	XORLW      0
0x0069	0x1D03      	BTFSS      STATUS, 2
0x006A	0x287E      	GOTO       L__interrupt93
;Camera_OSD_Switcher_via_PWM_Rx.mbas,222 :: 		inc(counter)
0x006B	0x0AA3      	INCF       _counter, 1
0x006C	0x1903      	BTFSC      STATUS, 2
0x006D	0x0AA4      	INCF       _counter+1, 1
;Camera_OSD_Switcher_via_PWM_Rx.mbas,223 :: 		If counter >=7000 then ' about 1 second checks
0x006E	0x3080      	MOVLW      128
0x006F	0x0624      	XORWF      _counter+1, 0
0x0070	0x00F0      	MOVWF      R0
0x0071	0x3080      	MOVLW      128
0x0072	0x3A1B      	XORLW      27
0x0073	0x0270      	SUBWF      R0, 0
0x0074	0x1D03      	BTFSS      STATUS, 2
0x0075	0x2878      	GOTO       L__interrupt193
0x0076	0x3058      	MOVLW      88
0x0077	0x0223      	SUBWF      _counter, 0
L__interrupt193:
0x0078	0x1C03      	BTFSS      STATUS, 0
0x0079	0x287D      	GOTO       L__interrupt98
;Camera_OSD_Switcher_via_PWM_Rx.mbas,224 :: 		fail_safe
0x007A	0x21E9      	CALL       _fail_safe
;Camera_OSD_Switcher_via_PWM_Rx.mbas,225 :: 		counter = 0
0x007B	0x01A3      	CLRF       _counter
0x007C	0x01A4      	CLRF       _counter+1
L__interrupt98:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,227 :: 		Wend
0x007D	0x2862      	GOTO       L__interrupt92
L__interrupt93:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,228 :: 		While TestBit(GPIO,3) = 1 ' will drop through this if no Rx Signal
L__interrupt101:
0x007E	0x01F1      	CLRF       R1
0x007F	0x1D85      	BTFSS      GPIO, 3
0x0080	0x2883      	GOTO       L__interrupt105
0x0081	0x3001      	MOVLW      1
0x0082	0x00F1      	MOVWF      R1
L__interrupt105:
0x0083	0x0871      	MOVF       R1, 0
0x0084	0x3A01      	XORLW      1
0x0085	0x1D03      	BTFSS      STATUS, 2
0x0086	0x2889      	GOTO       L__interrupt102
;Camera_OSD_Switcher_via_PWM_Rx.mbas,229 :: 		GPIO.B0 = 0 ' Turn off Fail Safe LED
0x0087	0x1005      	BCF        GPIO, 0
;Camera_OSD_Switcher_via_PWM_Rx.mbas,230 :: 		Wend
0x0088	0x287E      	GOTO       L__interrupt101
L__interrupt102:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,231 :: 		counter = 0
0x0089	0x01A3      	CLRF       _counter
0x008A	0x01A4      	CLRF       _counter+1
;Camera_OSD_Switcher_via_PWM_Rx.mbas,232 :: 		While TestBit(GPIO,3)  = 0
L__interrupt107:
0x008B	0x01F1      	CLRF       R1
0x008C	0x1D85      	BTFSS      GPIO, 3
0x008D	0x2890      	GOTO       L__interrupt111
0x008E	0x3001      	MOVLW      1
0x008F	0x00F1      	MOVWF      R1
L__interrupt111:
0x0090	0x0871      	MOVF       R1, 0
0x0091	0x3A00      	XORLW      0
0x0092	0x1D03      	BTFSS      STATUS, 2
0x0093	0x28A7      	GOTO       L__interrupt108
;Camera_OSD_Switcher_via_PWM_Rx.mbas,233 :: 		inc(counter)
0x0094	0x0AA3      	INCF       _counter, 1
0x0095	0x1903      	BTFSC      STATUS, 2
0x0096	0x0AA4      	INCF       _counter+1, 1
;Camera_OSD_Switcher_via_PWM_Rx.mbas,234 :: 		If counter >=7000 then ' about 1 second checks
0x0097	0x3080      	MOVLW      128
0x0098	0x0624      	XORWF      _counter+1, 0
0x0099	0x00F0      	MOVWF      R0
0x009A	0x3080      	MOVLW      128
0x009B	0x3A1B      	XORLW      27
0x009C	0x0270      	SUBWF      R0, 0
0x009D	0x1D03      	BTFSS      STATUS, 2
0x009E	0x28A1      	GOTO       L__interrupt194
0x009F	0x3058      	MOVLW      88
0x00A0	0x0223      	SUBWF      _counter, 0
L__interrupt194:
0x00A1	0x1C03      	BTFSS      STATUS, 0
0x00A2	0x28A6      	GOTO       L__interrupt113
;Camera_OSD_Switcher_via_PWM_Rx.mbas,235 :: 		fail_safe
0x00A3	0x21E9      	CALL       _fail_safe
;Camera_OSD_Switcher_via_PWM_Rx.mbas,236 :: 		counter = 0
0x00A4	0x01A3      	CLRF       _counter
0x00A5	0x01A4      	CLRF       _counter+1
L__interrupt113:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,238 :: 		Wend
0x00A6	0x288B      	GOTO       L__interrupt107
L__interrupt108:
L__interrupt74:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,240 :: 		End Sub
L_end_interrupt:
L__interrupt189:
0x00A7	0x0822      	MOVF       ___savePCLATH, 0
0x00A8	0x008A      	MOVWF      PCLATH
0x00A9	0x0E21      	SWAPF      ___saveSTATUS, 0
0x00AA	0x0083      	MOVWF      STATUS
0x00AB	0x0EFF      	SWAPF      R15, 1
0x00AC	0x0E7F      	SWAPF      R15, 0
0x00AD	0x0009      	RETFIE
; end of _interrupt
_RES032:
;__Lib_MathDouble.mpas,104 :: 		
;__Lib_MathDouble.mpas,109 :: 		
0x00AE	0x01F2      	CLRF       R2
;__Lib_MathDouble.mpas,110 :: 		
0x00AF	0x01F1      	CLRF       R1
;__Lib_MathDouble.mpas,111 :: 		
0x00B0	0x01F0      	CLRF       R0
;__Lib_MathDouble.mpas,112 :: 		
0x00B1	0x01F8      	CLRF       R8
;__Lib_MathDouble.mpas,113 :: 		
0x00B2	0x01F3      	CLRF       R3
;__Lib_MathDouble.mpas,114 :: 		
0x00B3	0x3000      	MOVLW      0
;__Lib_MathDouble.mpas,116 :: 		
L_end_RES032:
0x00B4	0x0008      	RETURN
; end of _RES032
_SETFUN32:
;__Lib_MathDouble.mpas,120 :: 		
;__Lib_MathDouble.mpas,127 :: 		
0x00B5	0x157B      	BSF        R11, 2
;__Lib_MathDouble.mpas,128 :: 		
0x00B6	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.mpas,129 :: 		
0x00B7	0x28BF      	GOTO       SETFUN32EEE
;__Lib_MathDouble.mpas,130 :: 		
0x00B8	0x3001      	MOVLW      1
;__Lib_MathDouble.mpas,131 :: 		
0x00B9	0x00F3      	MOVWF      R3
;__Lib_MathDouble.mpas,132 :: 		
0x00BA	0x01F2      	CLRF       R2
;__Lib_MathDouble.mpas,133 :: 		
0x00BB	0x01F1      	CLRF       R1
;__Lib_MathDouble.mpas,134 :: 		
0x00BC	0x01F0      	CLRF       R0
;__Lib_MathDouble.mpas,135 :: 		
0x00BD	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.mpas,136 :: 		
0x00BE	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.mpas,137 :: 		
SETFUN32EEE:
;__Lib_MathDouble.mpas,138 :: 		
0x00BF	0x30FF      	MOVLW      255
;__Lib_MathDouble.mpas,140 :: 		
L_end_SETFUN32:
0x00C0	0x0008      	RETURN
; end of _SETFUN32
_FIXSIGN32:
;__Lib_MathDouble.mpas,92 :: 		
;__Lib_MathDouble.mpas,96 :: 		
0x00C1	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.mpas,97 :: 		
0x00C2	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.mpas,98 :: 		
0x00C3	0x3000      	MOVLW      0
;__Lib_MathDouble.mpas,100 :: 		
L_end_FIXSIGN32:
0x00C4	0x0008      	RETURN
; end of _FIXSIGN32
_NRM3232:
;__Lib_MathDouble.mpas,151 :: 		
;__Lib_MathDouble.mpas,159 :: 		
0x00C5	0x01A0      	CLRF       __math_tempbD
;__Lib_MathDouble.mpas,160 :: 		
0x00C6	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.mpas,161 :: 		
0x00C7	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.mpas,162 :: 		
0x00C8	0x28DA      	GOTO       NORM3232
;__Lib_MathDouble.mpas,163 :: 		
0x00C9	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.mpas,164 :: 		
0x00CA	0x00F2      	MOVWF      R2
;__Lib_MathDouble.mpas,165 :: 		
0x00CB	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.mpas,166 :: 		
0x00CC	0x00F1      	MOVWF      R1
;__Lib_MathDouble.mpas,167 :: 		
0x00CD	0x01F0      	CLRF       R0
;__Lib_MathDouble.mpas,168 :: 		
0x00CE	0x15A0      	BSF        __math_tempbD, 3
;__Lib_MathDouble.mpas,170 :: 		
0x00CF	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.mpas,171 :: 		
0x00D0	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.mpas,172 :: 		
0x00D1	0x28DA      	GOTO       NORM3232
;__Lib_MathDouble.mpas,173 :: 		
0x00D2	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.mpas,174 :: 		
0x00D3	0x00F2      	MOVWF      R2
;__Lib_MathDouble.mpas,175 :: 		
0x00D4	0x01F1      	CLRF       R1
;__Lib_MathDouble.mpas,176 :: 		
0x00D5	0x11A0      	BCF        __math_tempbD, 3
;__Lib_MathDouble.mpas,177 :: 		
0x00D6	0x1620      	BSF        __math_tempbD, 4
;__Lib_MathDouble.mpas,179 :: 		
0x00D7	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.mpas,180 :: 		
0x00D8	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,181 :: 		
0x00D9	0x28E8      	GOTO       JPNRES032
;__Lib_MathDouble.mpas,182 :: 		
NORM3232:
;__Lib_MathDouble.mpas,183 :: 		
0x00DA	0x0820      	MOVF       __math_tempbD, 0
;__Lib_MathDouble.mpas,184 :: 		
0x00DB	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.mpas,185 :: 		
0x00DC	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.mpas,186 :: 		
0x00DD	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.mpas,187 :: 		
0x00DE	0x28EC      	GOTO       JPNSETFUN32
;__Lib_MathDouble.mpas,188 :: 		
0x00DF	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.mpas,189 :: 		
NORM3232A:
;__Lib_MathDouble.mpas,190 :: 		
0x00E0	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.mpas,191 :: 		
0x00E1	0x28F0      	GOTO       JMPNFIXSIGN32
;__Lib_MathDouble.mpas,192 :: 		
0x00E2	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.mpas,193 :: 		
0x00E3	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.mpas,194 :: 		
0x00E4	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.mpas,195 :: 		
0x00E5	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.mpas,196 :: 		
0x00E6	0x28E0      	GOTO       NORM3232A
;__Lib_MathDouble.mpas,197 :: 		
0x00E7	0x28EC      	GOTO       JPNSETFUN32
;__Lib_MathDouble.mpas,198 :: 		
JPNRES032:
;__Lib_MathDouble.mpas,199 :: 		
0x00E8	0x3001      	MOVLW      1
;__Lib_MathDouble.mpas,200 :: 		
0x00E9	0x00FC      	MOVWF      R12
;__Lib_MathDouble.mpas,202 :: 		
0x00EA	0x20AE      	CALL       _RES032
;__Lib_MathDouble.mpas,204 :: 		
0x00EB	0x28F3      	GOTO       NORM32EEE
;__Lib_MathDouble.mpas,205 :: 		
JPNSETFUN32:
;__Lib_MathDouble.mpas,206 :: 		
0x00EC	0x3002      	MOVLW      2
;__Lib_MathDouble.mpas,207 :: 		
0x00ED	0x00FC      	MOVWF      R12
;__Lib_MathDouble.mpas,209 :: 		
0x00EE	0x20B5      	CALL       _SETFUN32
;__Lib_MathDouble.mpas,211 :: 		
0x00EF	0x28F3      	GOTO       NORM32EEE
;__Lib_MathDouble.mpas,212 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.mpas,213 :: 		
0x00F0	0x3004      	MOVLW      4
;__Lib_MathDouble.mpas,214 :: 		
0x00F1	0x00FC      	MOVWF      R12
;__Lib_MathDouble.mpas,216 :: 		
0x00F2	0x20C1      	CALL       _FIXSIGN32
;__Lib_MathDouble.mpas,218 :: 		
NORM32EEE:
;__Lib_MathDouble.mpas,220 :: 		
L_end_NRM3232:
0x00F3	0x0008      	RETURN
; end of _NRM3232
_SETFOV32:
;__Lib_MathDouble.mpas,57 :: 		
;__Lib_MathDouble.mpas,64 :: 		
0x00F4	0x14FB      	BSF        R11, 1
;__Lib_MathDouble.mpas,65 :: 		
0x00F5	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.mpas,66 :: 		
0x00F6	0x28FE      	GOTO       SETFOV32EEE
;__Lib_MathDouble.mpas,67 :: 		
0x00F7	0x30FF      	MOVLW      255
;__Lib_MathDouble.mpas,68 :: 		
0x00F8	0x00F3      	MOVWF      R3
;__Lib_MathDouble.mpas,69 :: 		
0x00F9	0x00F2      	MOVWF      R2
;__Lib_MathDouble.mpas,70 :: 		
0x00FA	0x00F1      	MOVWF      R1
;__Lib_MathDouble.mpas,71 :: 		
0x00FB	0x00F0      	MOVWF      R0
;__Lib_MathDouble.mpas,72 :: 		
0x00FC	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.mpas,73 :: 		
0x00FD	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.mpas,74 :: 		
SETFOV32EEE:
;__Lib_MathDouble.mpas,75 :: 		
0x00FE	0x30FF      	MOVLW      255
;__Lib_MathDouble.mpas,77 :: 		
L_end_SETFOV32:
0x00FF	0x0008      	RETURN
; end of _SETFOV32
_SETIOV3224:
;__Lib_MathDouble.mpas,967 :: 		
;__Lib_MathDouble.mpas,973 :: 		
0x0100	0x147B      	BSF        R11, 0
;__Lib_MathDouble.mpas,974 :: 		
0x0101	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.mpas,975 :: 		
0x0102	0x290B      	GOTO       SETIOV3224EEE
;__Lib_MathDouble.mpas,977 :: 		
0x0103	0x01F2      	CLRF       R2
;__Lib_MathDouble.mpas,978 :: 		
0x0104	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.mpas,979 :: 		
0x0105	0x30FF      	MOVLW      255
;__Lib_MathDouble.mpas,980 :: 		
0x0106	0x00F2      	MOVWF      R2
;__Lib_MathDouble.mpas,981 :: 		
0x0107	0x00F1      	MOVWF      R1
;__Lib_MathDouble.mpas,982 :: 		
0x0108	0x00F0      	MOVWF      R0
;__Lib_MathDouble.mpas,983 :: 		
0x0109	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.mpas,984 :: 		
0x010A	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.mpas,985 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.mpas,986 :: 		
0x010B	0x30FF      	MOVLW      255
;__Lib_MathDouble.mpas,988 :: 		
L_end_SETIOV3224:
0x010C	0x0008      	RETURN
; end of _SETIOV3224
_Double2Int:
;__Lib_MathDouble.mpas,1360 :: 		
;__Lib_MathDouble.mpas,1368 :: 		
0x010D	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.mpas,1369 :: 		
0x010E	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.mpas,1371 :: 		
0x010F	0x01FB      	CLRF       R11
;__Lib_MathDouble.mpas,1372 :: 		
0x0110	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.mpas,1373 :: 		
0x0111	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,1374 :: 		
0x0112	0x294A      	GOTO       IRES016
;__Lib_MathDouble.mpas,1376 :: 		
0x0113	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.mpas,1377 :: 		
0x0114	0x00FA      	MOVWF      R10
;__Lib_MathDouble.mpas,1378 :: 		
0x0115	0x17F2      	BSF        R2, 7
;__Lib_MathDouble.mpas,1380 :: 		
0x0116	0x308E      	MOVLW      142
;__Lib_MathDouble.mpas,1381 :: 		
0x0117	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.mpas,1382 :: 		
0x0118	0x1FF3      	BTFSS      R3, 7
;__Lib_MathDouble.mpas,1383 :: 		
0x0119	0x294D      	GOTO       SETIOV16
;__Lib_MathDouble.mpas,1384 :: 		
0x011A	0x09F3      	COMF       R3, 1
;__Lib_MathDouble.mpas,1385 :: 		
0x011B	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.mpas,1387 :: 		
0x011C	0x3008      	MOVLW      8
;__Lib_MathDouble.mpas,1388 :: 		
0x011D	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.mpas,1389 :: 		
0x011E	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.mpas,1390 :: 		
0x011F	0x2930      	GOTO       TSHIFT3216
;__Lib_MathDouble.mpas,1391 :: 		
0x0120	0x00F3      	MOVWF      R3
;__Lib_MathDouble.mpas,1392 :: 		
0x0121	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.mpas,1393 :: 		
0x0122	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.mpas,1394 :: 		
0x0123	0x00F1      	MOVWF      R1
;__Lib_MathDouble.mpas,1395 :: 		
0x0124	0x01F2      	CLRF       R2
;__Lib_MathDouble.mpas,1397 :: 		
0x0125	0x3008      	MOVLW      8
;__Lib_MathDouble.mpas,1398 :: 		
0x0126	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.mpas,1399 :: 		
0x0127	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.mpas,1400 :: 		
0x0128	0x2930      	GOTO       TSHIFT3216
;__Lib_MathDouble.mpas,1401 :: 		
0x0129	0x00F3      	MOVWF      R3
;__Lib_MathDouble.mpas,1402 :: 		
0x012A	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.mpas,1403 :: 		
0x012B	0x01F1      	CLRF       R1
;__Lib_MathDouble.mpas,1405 :: 		
0x012C	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.mpas,1406 :: 		
0x012D	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.mpas,1407 :: 		
0x012E	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.mpas,1408 :: 		
0x012F	0x2938      	GOTO       SHIFT3216OK
;__Lib_MathDouble.mpas,1409 :: 		
TSHIFT3216:
;__Lib_MathDouble.mpas,1410 :: 		
0x0130	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.mpas,1411 :: 		
0x0131	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,1412 :: 		
0x0132	0x2938      	GOTO       SHIFT3216OK
;__Lib_MathDouble.mpas,1413 :: 		
SHIFT3216:
;__Lib_MathDouble.mpas,1414 :: 		
0x0133	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.mpas,1415 :: 		
0x0134	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.mpas,1416 :: 		
0x0135	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.mpas,1417 :: 		
0x0136	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.mpas,1418 :: 		
0x0137	0x2933      	GOTO       SHIFT3216
;__Lib_MathDouble.mpas,1419 :: 		
SHIFT3216OK:
;__Lib_MathDouble.mpas,1420 :: 		
0x0138	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.mpas,1421 :: 		
0x0139	0x1C71      	BTFSS      R1, 0
;__Lib_MathDouble.mpas,1422 :: 		
0x013A	0x2942      	GOTO       INT3216OK
;__Lib_MathDouble.mpas,1423 :: 		
0x013B	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.mpas,1424 :: 		
0x013C	0x2942      	GOTO       INT3216OK
;__Lib_MathDouble.mpas,1425 :: 		
0x013D	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.mpas,1426 :: 		
0x013E	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,1427 :: 		
0x013F	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.mpas,1428 :: 		
0x0140	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.mpas,1429 :: 		
0x0141	0x2959      	GOTO       JPJSETIOV3224
;__Lib_MathDouble.mpas,1430 :: 		
INT3216OK:
;__Lib_MathDouble.mpas,1431 :: 		
0x0142	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.mpas,1432 :: 		
0x0143	0x295C      	GOTO       INT3216EOK
;__Lib_MathDouble.mpas,1434 :: 		
0x0144	0x09F2      	COMF       R2, 1
;__Lib_MathDouble.mpas,1435 :: 		
0x0145	0x09F1      	COMF       R1, 1
;__Lib_MathDouble.mpas,1436 :: 		
0x0146	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.mpas,1437 :: 		
0x0147	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,1438 :: 		
0x0148	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.mpas,1439 :: 		
0x0149	0x295C      	GOTO       INT3216EOK
;__Lib_MathDouble.mpas,1441 :: 		
IRES016:
;__Lib_MathDouble.mpas,1442 :: 		
0x014A	0x01F2      	CLRF       R2
;__Lib_MathDouble.mpas,1443 :: 		
0x014B	0x01F1      	CLRF       R1
;__Lib_MathDouble.mpas,1444 :: 		
0x014C	0x295C      	GOTO       INT3216EOK
;__Lib_MathDouble.mpas,1445 :: 		
SETIOV16:
;__Lib_MathDouble.mpas,1446 :: 		
0x014D	0x147B      	BSF        R11, 0
;__Lib_MathDouble.mpas,1447 :: 		
0x014E	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.mpas,1448 :: 		
0x014F	0x295F      	GOTO       INT3216EER
;__Lib_MathDouble.mpas,1450 :: 		
0x0150	0x01F2      	CLRF       R2
;__Lib_MathDouble.mpas,1451 :: 		
0x0151	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.mpas,1452 :: 		
0x0152	0x295F      	GOTO       INT3216EER
;__Lib_MathDouble.mpas,1453 :: 		
0x0153	0x30FF      	MOVLW      255
;__Lib_MathDouble.mpas,1454 :: 		
0x0154	0x00F2      	MOVWF      R2
;__Lib_MathDouble.mpas,1455 :: 		
0x0155	0x00F1      	MOVWF      R1
;__Lib_MathDouble.mpas,1456 :: 		
0x0156	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.mpas,1457 :: 		
0x0157	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.mpas,1458 :: 		
0x0158	0x295F      	GOTO       INT3216EER
;__Lib_MathDouble.mpas,1460 :: 		
JPJSETIOV3224:
;__Lib_MathDouble.mpas,1461 :: 		
0x0159	0x3001      	MOVLW      1
;__Lib_MathDouble.mpas,1462 :: 		
0x015A	0x00FC      	MOVWF      R12
;__Lib_MathDouble.mpas,1463 :: 		
0x015B	0x2961      	GOTO       INT3216EEE
;__Lib_MathDouble.mpas,1464 :: 		
INT3216EOK:
;__Lib_MathDouble.mpas,1465 :: 		
0x015C	0x3000      	MOVLW      0
;__Lib_MathDouble.mpas,1466 :: 		
0x015D	0x00FC      	MOVWF      R12
;__Lib_MathDouble.mpas,1467 :: 		
0x015E	0x2961      	GOTO       INT3216EEE
;__Lib_MathDouble.mpas,1468 :: 		
INT3216EER:
;__Lib_MathDouble.mpas,1469 :: 		
0x015F	0x30FF      	MOVLW      255
;__Lib_MathDouble.mpas,1470 :: 		
0x0160	0x00FC      	MOVWF      R12
;__Lib_MathDouble.mpas,1471 :: 		
INT3216EEE:
;__Lib_MathDouble.mpas,1474 :: 		
0x0161	0x08FC      	MOVF       R12, 1
;__Lib_MathDouble.mpas,1476 :: 		
0x0162	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,1477 :: 		
0x0163	0x2965      	GOTO       L_Double2Int_0
;__Lib_MathDouble.mpas,1479 :: 		
0x0164	0x2100      	CALL       _SETIOV3224
;__Lib_MathDouble.mpas,1481 :: 		
L_Double2Int_0:
;__Lib_MathDouble.mpas,1482 :: 		
0x0165	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.mpas,1483 :: 		
0x0166	0x00F0      	MOVWF      R0
;__Lib_MathDouble.mpas,1484 :: 		
0x0167	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.mpas,1485 :: 		
0x0168	0x00F1      	MOVWF      R1
;__Lib_MathDouble.mpas,1488 :: 		
L_end_Double2Int:
0x0169	0x0008      	RETURN
; end of _Double2Int
_Mul_32x32_FP:
;__Lib_MathDouble.mpas,586 :: 		
;__Lib_MathDouble.mpas,600 :: 		
0x016A	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.mpas,601 :: 		
0x016B	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.mpas,603 :: 		
0x016C	0x01FB      	CLRF       R11
;__Lib_MathDouble.mpas,604 :: 		
0x016D	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.mpas,605 :: 		
0x016E	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.mpas,606 :: 		
0x016F	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.mpas,607 :: 		
0x0170	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,608 :: 		
0x0171	0x29C1      	GOTO       JPMRES032
;__Lib_MathDouble.mpas,610 :: 		
0x0172	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.mpas,611 :: 		
0x0173	0x0676      	XORWF      R6, 0
;__Lib_MathDouble.mpas,612 :: 		
0x0174	0x00FA      	MOVWF      R10
;__Lib_MathDouble.mpas,613 :: 		
0x0175	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.mpas,614 :: 		
0x0176	0x07F3      	ADDWF      R3, 1
;__Lib_MathDouble.mpas,615 :: 		
0x0177	0x307E      	MOVLW      126
;__Lib_MathDouble.mpas,616 :: 		
0x0178	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.mpas,617 :: 		
0x0179	0x297E      	GOTO       MTUN32
;__Lib_MathDouble.mpas,618 :: 		
0x017A	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.mpas,619 :: 		
0x017B	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.mpas,620 :: 		
0x017C	0x29C4      	GOTO       JPMSETFOV32
;__Lib_MathDouble.mpas,621 :: 		
0x017D	0x2981      	GOTO       MOK32
;__Lib_MathDouble.mpas,622 :: 		
MTUN32:
;__Lib_MathDouble.mpas,623 :: 		
0x017E	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.mpas,624 :: 		
0x017F	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.mpas,625 :: 		
0x0180	0x29C7      	GOTO       JPMSETFUN32
;__Lib_MathDouble.mpas,626 :: 		
MOK32:
;__Lib_MathDouble.mpas,627 :: 		
0x0181	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.mpas,628 :: 		
0x0182	0x00F8      	MOVWF      R8
;__Lib_MathDouble.mpas,629 :: 		
0x0183	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.mpas,630 :: 		
0x0184	0x00FC      	MOVWF      R12
;__Lib_MathDouble.mpas,631 :: 		
0x0185	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.mpas,632 :: 		
0x0186	0x00FD      	MOVWF      R13
;__Lib_MathDouble.mpas,633 :: 		
0x0187	0x17F8      	BSF        R8, 7
;__Lib_MathDouble.mpas,634 :: 		
0x0188	0x17F6      	BSF        R6, 7
;__Lib_MathDouble.mpas,635 :: 		
0x0189	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.mpas,636 :: 		
0x018A	0x01F2      	CLRF       R2
;__Lib_MathDouble.mpas,637 :: 		
0x018B	0x01F1      	CLRF       R1
;__Lib_MathDouble.mpas,638 :: 		
0x018C	0x01F0      	CLRF       R0
;__Lib_MathDouble.mpas,639 :: 		
0x018D	0x3018      	MOVLW      24
;__Lib_MathDouble.mpas,640 :: 		
0x018E	0x00A0      	MOVWF      __math_tempbD
;__Lib_MathDouble.mpas,641 :: 		
MLOOP32:
;__Lib_MathDouble.mpas,642 :: 		
0x018F	0x1C7D      	BTFSS      R13, 0
;__Lib_MathDouble.mpas,643 :: 		
0x0190	0x299B      	GOTO       MNOADD32
;__Lib_MathDouble.mpas,645 :: 		
0x0191	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.mpas,646 :: 		
0x0192	0x07F0      	ADDWF      R0, 1
;__Lib_MathDouble.mpas,647 :: 		
0x0193	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.mpas,648 :: 		
0x0194	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.mpas,649 :: 		
0x0195	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.mpas,650 :: 		
0x0196	0x07F1      	ADDWF      R1, 1
;__Lib_MathDouble.mpas,651 :: 		
0x0197	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.mpas,652 :: 		
0x0198	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.mpas,653 :: 		
0x0199	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.mpas,654 :: 		
0x019A	0x07F2      	ADDWF      R2, 1
;__Lib_MathDouble.mpas,655 :: 		
MNOADD32:
;__Lib_MathDouble.mpas,656 :: 		
0x019B	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.mpas,657 :: 		
0x019C	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.mpas,658 :: 		
0x019D	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.mpas,659 :: 		
0x019E	0x0CF8      	RRF        R8, 1
;__Lib_MathDouble.mpas,660 :: 		
0x019F	0x0CFC      	RRF        R12, 1
;__Lib_MathDouble.mpas,661 :: 		
0x01A0	0x0CFD      	RRF        R13, 1
;__Lib_MathDouble.mpas,662 :: 		
0x01A1	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.mpas,663 :: 		
0x01A2	0x0BA0      	DECFSZ     __math_tempbD, 1
;__Lib_MathDouble.mpas,664 :: 		
0x01A3	0x298F      	GOTO       MLOOP32
;__Lib_MathDouble.mpas,665 :: 		
0x01A4	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.mpas,666 :: 		
0x01A5	0x29AB      	GOTO       MROUND32
;__Lib_MathDouble.mpas,667 :: 		
0x01A6	0x0DF8      	RLF        R8, 1
;__Lib_MathDouble.mpas,668 :: 		
0x01A7	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.mpas,669 :: 		
0x01A8	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.mpas,670 :: 		
0x01A9	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.mpas,671 :: 		
0x01AA	0x03F3      	DECF       R3, 1
;__Lib_MathDouble.mpas,672 :: 		
MROUND32:
;__Lib_MathDouble.mpas,673 :: 		
0x01AB	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.mpas,674 :: 		
0x01AC	0x1C70      	BTFSS      R0, 0
;__Lib_MathDouble.mpas,675 :: 		
0x01AD	0x29BD      	GOTO       MUL32OK
;__Lib_MathDouble.mpas,676 :: 		
0x01AE	0x1FF8      	BTFSS      R8, 7
;__Lib_MathDouble.mpas,677 :: 		
0x01AF	0x29BD      	GOTO       MUL32OK
;__Lib_MathDouble.mpas,678 :: 		
0x01B0	0x0AF0      	INCF       R0, 1
;__Lib_MathDouble.mpas,679 :: 		
0x01B1	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,680 :: 		
0x01B2	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.mpas,681 :: 		
0x01B3	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,682 :: 		
0x01B4	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.mpas,683 :: 		
0x01B5	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.mpas,684 :: 		
0x01B6	0x29BD      	GOTO       MUL32OK
;__Lib_MathDouble.mpas,685 :: 		
0x01B7	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.mpas,686 :: 		
0x01B8	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.mpas,687 :: 		
0x01B9	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.mpas,688 :: 		
0x01BA	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.mpas,689 :: 		
0x01BB	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,690 :: 		
0x01BC	0x29C4      	GOTO       JPMSETFOV32
;__Lib_MathDouble.mpas,691 :: 		
MUL32OK:
;__Lib_MathDouble.mpas,692 :: 		
0x01BD	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.mpas,693 :: 		
0x01BE	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.mpas,694 :: 		
0x01BF	0x3000      	MOVLW      0
;__Lib_MathDouble.mpas,696 :: 		
0x01C0	0x29C9      	GOTO       MUL32EEE
;__Lib_MathDouble.mpas,697 :: 		
JPMRES032:
;__Lib_MathDouble.mpas,698 :: 		
0x01C1	0x3001      	MOVLW      1
;__Lib_MathDouble.mpas,701 :: 		
0x01C2	0x20AE      	CALL       _RES032
;__Lib_MathDouble.mpas,703 :: 		
0x01C3	0x29C9      	GOTO       MUL32EEE
;__Lib_MathDouble.mpas,704 :: 		
JPMSETFOV32:
;__Lib_MathDouble.mpas,705 :: 		
0x01C4	0x3002      	MOVLW      2
;__Lib_MathDouble.mpas,708 :: 		
0x01C5	0x20F4      	CALL       _SETFOV32
;__Lib_MathDouble.mpas,710 :: 		
0x01C6	0x29C9      	GOTO       MUL32EEE
;__Lib_MathDouble.mpas,711 :: 		
JPMSETFUN32:
;__Lib_MathDouble.mpas,712 :: 		
0x01C7	0x3004      	MOVLW      4
;__Lib_MathDouble.mpas,715 :: 		
0x01C8	0x20B5      	CALL       _SETFUN32
;__Lib_MathDouble.mpas,717 :: 		
MUL32EEE:
;__Lib_MathDouble.mpas,718 :: 		
0x01C9	0x0000      	NOP
;__Lib_MathDouble.mpas,720 :: 		
L_end_Mul_32x32_FP:
0x01CA	0x0008      	RETURN
; end of _Mul_32x32_FP
_Int2Double:
;__Lib_MathDouble.mpas,1783 :: 		
;__Lib_MathDouble.mpas,1789 :: 		
0x01CB	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.mpas,1790 :: 		
0x01CC	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.mpas,1791 :: 		
0x01CD	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.mpas,1792 :: 		
0x01CE	0x00F8      	MOVWF      R8
;__Lib_MathDouble.mpas,1793 :: 		
0x01CF	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.mpas,1794 :: 		
0x01D0	0x00F0      	MOVWF      R0
;__Lib_MathDouble.mpas,1795 :: 		
0x01D1	0x01F1      	CLRF       R1
;__Lib_MathDouble.mpas,1796 :: 		
0x01D2	0x01F2      	CLRF       R2
;__Lib_MathDouble.mpas,1797 :: 		
0x01D3	0x01F3      	CLRF       R3
;__Lib_MathDouble.mpas,1800 :: 		
0x01D4	0x01FB      	CLRF       R11
;__Lib_MathDouble.mpas,1801 :: 		
0x01D5	0x01FC      	CLRF       R12
;__Lib_MathDouble.mpas,1803 :: 		
0x01D6	0x3096      	MOVLW      150
;__Lib_MathDouble.mpas,1804 :: 		
0x01D7	0x00F3      	MOVWF      R3
;__Lib_MathDouble.mpas,1805 :: 		
0x01D8	0x01FA      	CLRF       R10
;__Lib_MathDouble.mpas,1806 :: 		
0x01D9	0x1FF0      	BTFSS      R0, 7
;__Lib_MathDouble.mpas,1807 :: 		
0x01DA	0x29E1      	GOTO       FLO1632EEE
;__Lib_MathDouble.mpas,1809 :: 		
0x01DB	0x09F8      	COMF       R8, 1
;__Lib_MathDouble.mpas,1810 :: 		
0x01DC	0x09F0      	COMF       R0, 1
;__Lib_MathDouble.mpas,1812 :: 		
0x01DD	0x0AF8      	INCF       R8, 1
;__Lib_MathDouble.mpas,1813 :: 		
0x01DE	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.mpas,1814 :: 		
0x01DF	0x0AF0      	INCF       R0, 1
;__Lib_MathDouble.mpas,1816 :: 		
0x01E0	0x17FA      	BSF        R10, 7
;__Lib_MathDouble.mpas,1817 :: 		
FLO1632EEE:
;__Lib_MathDouble.mpas,1818 :: 		
0x01E1	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.mpas,1819 :: 		
0x01E2	0x00F1      	MOVWF      R1
;__Lib_MathDouble.mpas,1820 :: 		
0x01E3	0x0878      	MOVF       R8, 0
;__Lib_MathDouble.mpas,1821 :: 		
0x01E4	0x00F0      	MOVWF      R0
;__Lib_MathDouble.mpas,1822 :: 		
0x01E5	0x01F8      	CLRF       R8
;__Lib_MathDouble.mpas,1823 :: 		
0x01E6	0x01F2      	CLRF       R2
;__Lib_MathDouble.mpas,1825 :: 		
0x01E7	0x20C5      	CALL       _NRM3232
;__Lib_MathDouble.mpas,1826 :: 		
L_end_Int2Double:
0x01E8	0x0008      	RETURN
; end of _Int2Double
_fail_safe:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,146 :: 		Sub Procedure fail_safe()
;Camera_OSD_Switcher_via_PWM_Rx.mbas,147 :: 		GPIO.B0 = 1
0x01E9	0x1283      	BCF        STATUS, 5
0x01EA	0x1405      	BSF        GPIO, 0
;Camera_OSD_Switcher_via_PWM_Rx.mbas,148 :: 		GPIO.B5 = 1
0x01EB	0x1685      	BSF        GPIO, 5
;Camera_OSD_Switcher_via_PWM_Rx.mbas,149 :: 		GPIO.B1 = 1
0x01EC	0x1485      	BSF        GPIO, 1
;Camera_OSD_Switcher_via_PWM_Rx.mbas,150 :: 		GPIO.B4 = 0
0x01ED	0x1205      	BCF        GPIO, 4
;Camera_OSD_Switcher_via_PWM_Rx.mbas,151 :: 		GPIO.B2 = 0
0x01EE	0x1105      	BCF        GPIO, 2
;Camera_OSD_Switcher_via_PWM_Rx.mbas,152 :: 		End Sub
L_end_fail_safe:
0x01EF	0x0008      	RETURN
; end of _fail_safe
_main:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,242 :: 		main:
;Camera_OSD_Switcher_via_PWM_Rx.mbas,244 :: 		OPTION_REG = %10000111     'GPIO pull ups are disabled and
0x01F0	0x3087      	MOVLW      135
0x01F1	0x1683      	BSF        STATUS, 5
0x01F2	0x0081      	MOVWF      OPTION_REG
;Camera_OSD_Switcher_via_PWM_Rx.mbas,247 :: 		CMCON0 = %00000111         'Configure comparitor pins as GPIO
0x01F3	0x3007      	MOVLW      7
0x01F4	0x1283      	BCF        STATUS, 5
0x01F5	0x0099      	MOVWF      CMCON0
;Camera_OSD_Switcher_via_PWM_Rx.mbas,248 :: 		ANSEL  = %00000000         'All are digital
0x01F6	0x1683      	BSF        STATUS, 5
0x01F7	0x019F      	CLRF       ANSEL
;Camera_OSD_Switcher_via_PWM_Rx.mbas,249 :: 		ADCON0 = %00000000
0x01F8	0x1283      	BCF        STATUS, 5
0x01F9	0x019F      	CLRF       ADCON0
;Camera_OSD_Switcher_via_PWM_Rx.mbas,250 :: 		TRISIO = %00000000         'All are Outputs (except B3 which is input only)
0x01FA	0x1683      	BSF        STATUS, 5
0x01FB	0x0185      	CLRF       TRISIO
;Camera_OSD_Switcher_via_PWM_Rx.mbas,252 :: 		fail_safe()
0x01FC	0x21E9      	CALL       _fail_safe
;Camera_OSD_Switcher_via_PWM_Rx.mbas,255 :: 		INTCON.GIE = 1             'Activate Global Interrupt Enable
0x01FD	0x178B      	BSF        INTCON, 7
;Camera_OSD_Switcher_via_PWM_Rx.mbas,256 :: 		INTCON.GPIE = 1            'Activate the Global Periferral Interrupt
0x01FE	0x158B      	BSF        INTCON, 3
;Camera_OSD_Switcher_via_PWM_Rx.mbas,257 :: 		IOC.IOC3 = 1               'Activate the interrupt for GPIP.B3
0x01FF	0x1683      	BSF        STATUS, 5
0x0200	0x1596      	BSF        IOC, 3
;Camera_OSD_Switcher_via_PWM_Rx.mbas,260 :: 		While True
L__main117:
0x0201	0x2A01      	GOTO       L__main117
;Camera_OSD_Switcher_via_PWM_Rx.mbas,261 :: 		Wend
L_end_main:
0x0202	0x2A02      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [170]    _interrupt
0x00AE       [7]    _RES032
0x00B5      [12]    _SETFUN32
0x00C1       [4]    _FIXSIGN32
0x00C5      [47]    _NRM3232
0x00F4      [12]    _SETFOV32
0x0100      [13]    _SETIOV3224
0x010D      [93]    _Double2Int
0x016A      [97]    _Mul_32x32_FP
0x01CB      [30]    _Int2Double
0x01E9       [7]    _fail_safe
0x01F0      [19]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0003       [1]    STATUS
0x0005       [1]    GPIO
0x000B       [1]    INTCON
0x0019       [1]    CMCON0
0x001F       [1]    ADCON0
0x0020       [1]    __math_tempbD
0x0021       [1]    ___saveSTATUS
0x0022       [1]    ___savePCLATH
0x0023       [2]    _counter
0x0025       [2]    _RC_Pulse
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISIO
0x0096       [1]    IOC
0x009F       [1]    ANSEL
